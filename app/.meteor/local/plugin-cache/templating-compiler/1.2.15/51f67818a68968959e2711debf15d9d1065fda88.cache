{"head":"","body":"","js":"\nTemplate.__checkName(\"status-auction\");\nTemplate[\"status-auction\"] = new Template(\"Template.status-auction\", (function() {\n  var view = this;\n  return HTML.DIV(\"\\n      \", HTML.H1({\n    class: \"domain-name\"\n  }, HTML.STRONG(Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \" is open for bids\"), \"\\n        \", HTML.P(\"\\n          Auction ends at \", HTML.EM(Blaze.View(\"lookup:registrationDate\", function() {\n    return Spacebars.mustache(view.lookup(\"registrationDate\"));\n  })), '.\\n          TODO: \"Reveal period starts in (timer)\"\\n        '), HTML.Raw(\"\\n        <h2>\\n            Submit bid\\n        </h2>\\n        \"), HTML.FORM({\n    class: \"new-bid\"\n  }, \"\\n          \", HTML.Raw(\"<p>\\n            Submit a bid for a chance of obtaining this domain name.\\n          </p>\"), \"\\n          \", HTML.Raw('<p>\\n            (temp bid password): <strong>\"asdf\"</strong> (todo: generate it)\\n          </p>'), \"\\n          \", HTML.Raw('<p>\\n            Bid amount\\n            <input type=\"text\" min=\"0\" step=\"any\" name=\"bidAmount\" placeholder=\"0.0\" class=\"dapp-large\" pattern=\"[0-9\\\\.,]*\">\\n          </p>'), \"\\n          \", HTML.Raw(\"<p>\\n            Decide how much Ether you want to deposit with the bid.\\n            This must be at least as much as the value of your bid, but can be more,\\n            in order to disguise the true value of the bid.\\n          </p>\"), \"\\n          \", HTML.Raw('<p>\\n            Deposit amount\\n            <input type=\"text\" min=\"0\" step=\"any\" name=\"depositAmount\" placeholder=\"0.0\" class=\"dapp-large\" pattern=\"[0-9\\\\.,]*\">        \\n          </p>'), \"\\n          \", HTML.BUTTON({\n    type: \"submit\",\n    class: \"dapp-block-button\",\n    disabled: function() {\n      return Spacebars.mustache(view.lookup(\"bidding\"));\n    }\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"bidding\"));\n  }, function() {\n    return \"\\n              Bidding...\\n            \";\n  }, function() {\n    return \"\\n              Bid\\n            \";\n  }), \"\\n          \"), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"aside-auction\");\nTemplate[\"aside-auction\"] = new Template(\"Template.aside-auction\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h3>My bids</h3>\\n\\n    \"), HTML.UL(\"\\n      \", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"bids\")),\n      _variable: \"bid\"\n    };\n  }, function() {\n    return [ \"\\n        \", HTML.LI(\"\\n            \", Blaze._TemplateWith(function() {\n      return {\n        bid: Spacebars.call(view.lookup(\"bid\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"components_bid\"));\n    }), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n    \") ];\n}));\n","bodyAttrs":{}}