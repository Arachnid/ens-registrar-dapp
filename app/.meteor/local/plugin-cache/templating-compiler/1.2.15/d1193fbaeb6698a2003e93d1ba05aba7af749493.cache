{"head":"","body":"","js":"\nTemplate.__checkName(\"status-owned\");\nTemplate[\"status-owned\"] = new Template(\"Template.status-owned\", (function() {\n  var view = this;\n  return [ HTML.H1({\n    class: \"domain-name\"\n  }, HTML.STRONG(Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \" is owned\"), \" \\n\\n    \", HTML.P(\"\\n        This name was registered at \", HTML.EM(Blaze.View(\"lookup:registrationDate\", function() {\n    return Spacebars.mustache(view.lookup(\"registrationDate\"));\n  })), \". Owner offered to pay up to \", HTML.EM(Blaze.View(\"lookup:highestBid\", function() {\n    return Spacebars.mustache(view.lookup(\"highestBid\"));\n  }), \" ether\"), \". \\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"deedValueIsMin\"));\n  }, function() {\n    return [ \" \\n        No other bid was above the minimum of \", HTML.EM(\"0.01 ether\"), \".\\n    \" ];\n  }, function() {\n    return [ \" \\n        Second highest bid was \", HTML.EM(Blaze.View(\"lookup:deedValue\", function() {\n      return Spacebars.mustache(view.lookup(\"deedValue\"));\n    }), \" ether\"), \".\\n    \" ];\n  }), \"\\n    \"), \"\\n\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"address\"));\n  }, function() {\n    return [ \"\\n      \", HTML.P(\"Points to: \", HTML.STRONG(Blaze._TemplateWith(function() {\n      return {\n        identity: Spacebars.call(view.lookup(\"address\")),\n        class: Spacebars.call(\"dapp-tiny\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));\n    }), Blaze.View(\"lookup:address\", function() {\n      return Spacebars.mustache(view.lookup(\"address\"));\n    }))), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      \", HTML.P(\"The owner has not set a resolver for this address yet\"), \"\\n    \" ];\n  }), \"\\n    \", HTML.P(\"Owned by: \", HTML.STRONG(Blaze._TemplateWith(function() {\n    return {\n      identity: Spacebars.call(view.lookup(\"owner\")),\n      class: Spacebars.call(\"dapp-tiny\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));\n  }), Blaze.View(\"lookup:TemplateVar.get\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"owner\");\n  }))), \"\\n    \", HTML.P(\"Deed address: \", HTML.STRONG(Blaze._TemplateWith(function() {\n    return {\n      identity: Spacebars.call(Spacebars.dataMustache(Spacebars.dot(view.lookup(\"entry\"), \"deed\", \"address\"))),\n      class: Spacebars.call(\"dapp-tiny\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));\n  }), Blaze.View(\"lookup:entry.deed.address\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"entry\"), \"deed\", \"address\"));\n  }))), \"\\n    \", HTML.P(\"Content: \", HTML.STRONG(Blaze.View(\"lookup:content\", function() {\n    return Spacebars.mustache(view.lookup(\"content\"));\n  }))), \"\\n    \", HTML.P(\"Needs to be renewed by: \", HTML.STRONG(Blaze.View(\"lookup:renewalDate\", function() {\n    return Spacebars.mustache(view.lookup(\"renewalDate\"));\n  }))) ];\n}));\n\nTemplate.__checkName(\"aside-owned\");\nTemplate[\"aside-owned\"] = new Template(\"Template.aside-owned\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h3>about this name</h3>\\n\\n    \"), HTML.UL(\"\\n        \", HTML.LI(\"\\n            \", HTML.SPAN({\n    class: \"big-numeral\"\n  }, Blaze.View(\"lookup:deedValue\", function() {\n    return Spacebars.mustache(view.lookup(\"deedValue\"));\n  })), \" \", HTML.Raw('<span class=\"unit\">ether</span>'), \" locked in this name\\n        \"), \"\\n        \\n    \") ];\n}));\n","bodyAttrs":{}}