{"head":"","body":"","js":"\nTemplate.__checkName(\"components_nameStatus\");\nTemplate[\"components_nameStatus\"] = new Template(\"Template.components_nameStatus\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"searched\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-md-8\"\n    }, \"\\n      \", Blaze.If(function() {\n      return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"error\");\n    }, function() {\n      return [ \"\\n        \", HTML.H1(\"Error getting entry\"), \"\\n        \", HTML.P(Blaze.View(\"lookup:TemplateVar.get\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"error\");\n      })), \"\\n      \" ];\n    }, function() {\n      return [ \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"status\")),\n          data: Spacebars.call(Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"nameInfo\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n      \" ];\n    }), \"\\n    \"), \"\\n    \", HTML.ASIDE({\n      class: \"col-md-4\"\n    }, \"\\n        \", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"aside\")),\n        data: Spacebars.call(Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"nameInfo\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n    \"), \"    \\n  \" ];\n  }, function() {\n    return [ \"\\n    \", HTML.H1(\"Type a name\"), \"\\n    \", HTML.P(\"\\n        This app allows you to register a .eth domain name, for use in ethereum decentralized applications. \\n    \"), \"\\n  \" ];\n  });\n}));\n\nTemplate.__checkName(\"status-invalid\");\nTemplate[\"status-invalid\"] = new Template(\"Template.status-invalid\", (function() {\n  var view = this;\n  return HTML.Raw(\"<div>\\n        <h1>Name is too short</h1>\\n        <p>\\n            On the temporary registrar only names longer than 6 characters are allowed\\n        </p>\\n    </div>\");\n}));\n\nTemplate.__checkName(\"status-can-invalidate\");\nTemplate[\"status-can-invalidate\"] = new Template(\"Template.status-can-invalidate\", (function() {\n  var view = this;\n  return HTML.Raw('<div>\\n        <h1>Name is too short</h1>\\n        <p>\\n            On the temporary registrar only names longer than 6 characters are allowed.\\n        </p>\\n        <p>\\n            <strong>But wait!</strong> Someone has accidentally registered this name. Invalidate it and you\\'ll get 50% of their refund.\\n        </p>\\n\\n        <button class=\"dapp-block-button invalidate\"> Invalidate </button>\\n\\n    </div>');\n}));\n\nTemplate.__checkName(\"aside-can-invalidate\");\nTemplate[\"aside-can-invalidate\"] = new Template(\"Template.aside-can-invalidate\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h3>about this name</h3>\\n\\n    \"), HTML.UL(\"\\n        \", HTML.LI(\"\\n            \", HTML.SPAN({\n    class: \"big-numeral\"\n  }, Blaze.View(\"lookup:value\", function() {\n    return Spacebars.mustache(view.lookup(\"value\"));\n  })), \" \", HTML.Raw('<span class=\"unit\">ether</span>'), \" locked in this name\\n        \"), \"\\n        \", HTML.LI(\"\\n            \", HTML.SPAN({\n    class: \"big-numeral\"\n  }, Blaze.View(\"lookup:invalidatorFee\", function() {\n    return Spacebars.mustache(view.lookup(\"invalidatorFee\"));\n  })), \" \", HTML.Raw('<span class=\"unit\">ether</span>'), \" will be paid to the first to report this invalid name\\n        \"), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"status-reveal\");\nTemplate[\"status-reveal\"] = new Template(\"Template.status-reveal\", (function() {\n  var view = this;\n  return HTML.Raw('<div>\\n        <h1> This domain auction is waiting for bids to be revealed </h1>\\n        <p>\\n            Wait for it..\\n        </p>\\n        <button class=\"dapp-block-button\"> Reveal yours </button>\\n    </div>');\n}));\n\nTemplate.__checkName(\"status-finalize\");\nTemplate[\"status-finalize\"] = new Template(\"Template.status-finalize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Raw(\"\\n        <h1> This domain needs to be finalized </h1>\\n        <p>\\n            Anyone can do it..\\n        </p>\\n        \"), Spacebars.include(view.lookupTemplate(\"finalizeButton\")), \"\\n    \");\n}));\n\nTemplate.__checkName(\"status-finalize-open\");\nTemplate[\"status-finalize-open\"] = new Template(\"Template.status-finalize-open\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Raw(\"\\n        <h1> This domain needs to be finalized </h1>\\n        <p>\\n            Anyone can do it.. Otherwise someone else can invalidate it\\n        </p>\\n        \"), Spacebars.include(view.lookupTemplate(\"finalizeButton\")), \"\\n    \");\n}));\n\nTemplate.__checkName(\"finalizeButton\");\nTemplate[\"finalizeButton\"] = new Template(\"Template.finalizeButton\", (function() {\n  var view = this;\n  return HTML.BUTTON({\n    class: \"dapp-block-button finalize\",\n    disabled: function() {\n      return Spacebars.mustache(view.lookup(\"finalizing\"));\n    }\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"finalizing\"));\n  }, function() {\n    return \"\\n      Finalizing...\\n    \";\n  }, function() {\n    return \"\\n      Finalize it \\n    \";\n  }), \"\\n  \");\n}));\n","bodyAttrs":{}}