{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/lib/ethereum","imported":["default","errors"],"specifiers":[{"kind":"named","imported":"default","local":"ethereum"},{"kind":"named","imported":"errors","local":"errors"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/templates/layout/body.js","filenameRelative":"/imports/templates/layout/body.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/templates/layout/body.js.map","sourceFileName":"/imports/templates/layout/body.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"body"},"ignored":false,"code":"var ethereum,errors;module.import('/imports/lib/ethereum',{\"default\":function(v){ethereum=v},\"errors\":function(v){errors=v}});\n\n/**\nTemplate Controllers\n\n@module Templates\n*/\n\n/**\nThe home template\n\n@class [template] layout_body\n@constructor\n*/\n\nTemplate['layout_body'].helpers({\n  /**\n  Get the name\n   @method (name)\n  */\n\n  'name': function () {\n    function name() {\n      return this.name || TAPi18n.__('dapp.home.defaultName');\n    }\n\n    return name;\n  }(),\n  'network': function () {\n    function network() {\n      return Session.get('network');\n    }\n\n    return network;\n  }()\n});\n\n// When the template is created\nTemplate['layout_body'].onCreated(function () {\n  var _this = this;\n\n  Meta.setSuffix(TAPi18n.__(\"dapp.home.title\"));\n  ethereum.onStatusChange(function (status) {\n    TemplateVar.set(_this, 'networkError', false);\n    TemplateVar.set(_this, 'isReady', status.isReady);\n    TemplateVar.set(_this, 'description', status.description);\n    if (status.theresAnError) {\n      TemplateVar.set(_this, 'theresAnError', status.theresAnError);\n      if (status.description === errors.invalidNetwork) {\n        TemplateVar.set(_this, 'networkError', true);\n      }\n    }\n  });\n  ethereum.init();\n});\n\nTemplate['layout_body'].events({\n  'click .retry': function () {\n    function clickRetry() {\n      ethereum.init();\n    }\n\n    return clickRetry;\n  }()\n});\n\n// CUSTOM ENS CONTRACT TEMPLATE\nTemplate['useCustomContract'].events({\n  'click .use-custom-contract .dapp-block-button': function () {\n    function clickUseCustomContractDappBlockButton() {\n      var address = TemplateVar.getFrom('.ens-address', 'value');\n      ethereum.setCustomContract(address);\n      ethereum.init();\n    }\n\n    return clickUseCustomContractDappBlockButton;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/templates/layout/body.js"],"names":["ethereum","errors","Template","helpers","name","TAPi18n","__","Session","get","onCreated","Meta","setSuffix","onStatusChange","TemplateVar","set","status","isReady","description","theresAnError","invalidNetwork","init","events","address","getFrom","setCustomContract"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,MAAnB,QAAiC,uBAAjC;;AAEA;;;;;;AAMA;;;;;;;AAOAC,SAAS,aAAT,EAAwBC,OAAxB,CAAgC;AAC5B;;;;;AAMA;AAAQ,oBAAW;AACf,aAAO,KAAKC,IAAL,IAAaC,QAAQC,EAAR,CAAW,uBAAX,CAApB;AACH;;AAFD;AAAA,KAP4B;AAU5B;AAAW,uBAAW;AACpB,aAAOC,QAAQC,GAAR,CAAY,SAAZ,CAAP;AACD;;AAFD;AAAA;AAV4B,CAAhC;;AAeA;AACAN,SAAS,aAAT,EAAwBO,SAAxB,CAAkC,YAAU;AAAA;;AAC1CC,OAAKC,SAAL,CAAeN,QAAQC,EAAR,CAAW,iBAAX,CAAf;AACAN,WAASY,cAAT,CAAwB,kBAAU;AAChCC,gBAAYC,GAAZ,QAAsB,cAAtB,EAAsC,KAAtC;AACAD,gBAAYC,GAAZ,QAAsB,SAAtB,EAAiCC,OAAOC,OAAxC;AACAH,gBAAYC,GAAZ,QAAsB,aAAtB,EAAqCC,OAAOE,WAA5C;AACA,QAAIF,OAAOG,aAAX,EAA0B;AACxBL,kBAAYC,GAAZ,QAAsB,eAAtB,EAAuCC,OAAOG,aAA9C;AACA,UAAIH,OAAOE,WAAP,KAAuBhB,OAAOkB,cAAlC,EAAkD;AAChDN,oBAAYC,GAAZ,QAAsB,cAAtB,EAAsC,IAAtC;AACD;AACF;AAEF,GAXD;AAYAd,WAASoB,IAAT;AACD,CAfD;;AAiBAlB,SAAS,aAAT,EAAwBmB,MAAxB,CAA+B;AAC7B;AAAgB,0BAAW;AACzBrB,eAASoB,IAAT;AACD;;AAFD;AAAA;AAD6B,CAA/B;;AAOA;AACAlB,SAAS,mBAAT,EAA8BmB,MAA9B,CAAqC;AACnC;AAAiD,qDAAW;AAC1D,UAAMC,UAAUT,YAAYU,OAAZ,CAAoB,cAApB,EAAoC,OAApC,CAAhB;AACAvB,eAASwB,iBAAT,CAA2BF,OAA3B;AACAtB,eAASoB,IAAT;AACD;;AAJD;AAAA;AADmC,CAArC","file":"/imports/templates/layout/body.js.map","sourcesContent":["import ethereum, { errors } from '/imports/lib/ethereum';\n\n/**\nTemplate Controllers\n\n@module Templates\n*/\n\n/**\nThe home template\n\n@class [template] layout_body\n@constructor\n*/\n\nTemplate['layout_body'].helpers({\n    /**\n    Get the name\n\n    @method (name)\n    */\n\n    'name': function() {\n        return this.name || TAPi18n.__('dapp.home.defaultName');\n    },\n    'network': function() {\n      return Session.get('network');\n    }\n});\n\n// When the template is created\nTemplate['layout_body'].onCreated(function(){\n  Meta.setSuffix(TAPi18n.__(\"dapp.home.title\"));\n  ethereum.onStatusChange(status => {\n    TemplateVar.set(this, 'networkError', false)\n    TemplateVar.set(this, 'isReady', status.isReady)\n    TemplateVar.set(this, 'description', status.description)\n    if (status.theresAnError) {\n      TemplateVar.set(this, 'theresAnError', status.theresAnError)\n      if (status.description === errors.invalidNetwork) {\n        TemplateVar.set(this, 'networkError', true)\n      }\n    }\n    \n  })\n  ethereum.init();\n});\n\nTemplate['layout_body'].events({\n  'click .retry': function() {\n    ethereum.init();\n  }\n})\n\n\n// CUSTOM ENS CONTRACT TEMPLATE\nTemplate['useCustomContract'].events({\n  'click .use-custom-contract .dapp-block-button': function() {\n    const address = TemplateVar.getFrom('.ens-address', 'value');\n    ethereum.setCustomContract(address)\n    ethereum.init()\n  }\n})"]},"hash":"2e7a300e24da4dd2a639a46b1c6ee47ddc11b326"}
