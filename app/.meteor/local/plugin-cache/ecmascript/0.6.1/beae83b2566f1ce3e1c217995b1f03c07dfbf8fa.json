{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/lib/ethereum","imported":["registrar"],"specifiers":[{"kind":"named","imported":"registrar","local":"registrar"}]},{"source":"/imports/lib/helpers/helperFunctions","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Helpers"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/templates/status/open.js","filenameRelative":"/imports/templates/status/open.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/templates/status/open.js.map","sourceFileName":"/imports/templates/status/open.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"open"},"ignored":false,"code":"var registrar;module.import('/imports/lib/ethereum',{\"registrar\":function(v){registrar=v}});var Helpers;module.import('/imports/lib/helpers/helperFunctions',{\"default\":function(v){Helpers=v}});\n\n\nTemplate['status-open'].events({\n  'click .open-auction': function () {\n    function openAuction() {\n      var name = Session.get('searched');\n      var accounts = EthAccounts.find().fetch();\n      var template = Template.instance();\n\n      if (accounts.length == 0) {\n        alert('No accounts found');\n      } else {\n        TemplateVar.set(template, 'opening', true);\n        registrar.openAuction(name, {\n          from: accounts[0].address,\n          gas: 1000000\n        }, function (err, txid) {\n          if (err) {\n            TemplateVar.set(template, 'opening', false);\n            alert(err);\n            return;\n          }\n          Helpers.checkTxSuccess(txid, function (err, isSuccessful) {\n            if (err) {\n              TemplateVar.set(template, 'opening', false);\n              alert(err);\n              return;\n            }\n            if (isSuccessful) {\n              Helpers.refreshStatus();\n            } else {\n              alert('Transaction failed');\n            }\n            TemplateVar.set(template, 'opening', false);\n          });\n        });\n      }\n    }\n\n    return openAuction;\n  }()\n});\n\nTemplate['status-open'].helpers({\n  opening: function () {\n    function opening() {\n      return TemplateVar.get('opening');\n    }\n\n    return opening;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/templates/status/open.js"],"names":["registrar","Helpers","Template","events","openAuction","name","Session","get","accounts","EthAccounts","find","fetch","template","instance","length","alert","TemplateVar","set","from","address","gas","err","txid","checkTxSuccess","isSuccessful","refreshStatus","helpers","opening"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,sCAApB;;AAEAC,SAAS,aAAT,EAAwBC,MAAxB,CAA+B;AAC7B;AAAuB,aAASC,WAAT,GAAuB;AAC5C,UAAIC,OAAOC,QAAQC,GAAR,CAAY,UAAZ,CAAX;AACA,UAAIC,WAAWC,YAAYC,IAAZ,GAAmBC,KAAnB,EAAf;AACA,UAAIC,WAAWV,SAASW,QAAT,EAAf;;AAEA,UAAIL,SAASM,MAAT,IAAmB,CAAvB,EAA0B;AACxBC,cAAM,mBAAN;AACD,OAFD,MAEO;AACLC,oBAAYC,GAAZ,CAAgBL,QAAhB,EAA0B,SAA1B,EAAqC,IAArC;AACAZ,kBAAUI,WAAV,CAAsBC,IAAtB,EAA4B;AAC1Ba,gBAAMV,SAAS,CAAT,EAAYW,OADQ;AAE1BC,eAAK;AAFqB,SAA5B,EAGG,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChB,cAAID,GAAJ,EAAS;AACPL,wBAAYC,GAAZ,CAAgBL,QAAhB,EAA0B,SAA1B,EAAqC,KAArC;AACAG,kBAAMM,GAAN;AACA;AACD;AACDpB,kBAAQsB,cAAR,CAAuBD,IAAvB,EAA6B,UAACD,GAAD,EAAMG,YAAN,EAAuB;AAClD,gBAAIH,GAAJ,EAAS;AACPL,0BAAYC,GAAZ,CAAgBL,QAAhB,EAA0B,SAA1B,EAAqC,KAArC;AACAG,oBAAMM,GAAN;AACA;AACD;AACD,gBAAIG,YAAJ,EAAkB;AAChBvB,sBAAQwB,aAAR;AACD,aAFD,MAEO;AACLV,oBAAM,oBAAN;AACD;AACDC,wBAAYC,GAAZ,CAAgBL,QAAhB,EAA0B,SAA1B,EAAqC,KAArC;AACD,WAZD;AAaD,SAtBD;AAuBD;AACF;;AAjCD,WAAgCR,WAAhC;AAAA;AAD6B,CAA/B;;AAqCAF,SAAS,aAAT,EAAwBwB,OAAxB,CAAgC;AAC9BC,SAD8B;AAAA,uBACpB;AACR,aAAOX,YAAYT,GAAZ,CAAgB,SAAhB,CAAP;AACD;;AAH6B;AAAA;AAAA,CAAhC","file":"/imports/templates/status/open.js.map","sourcesContent":["import { registrar } from '/imports/lib/ethereum';\nimport Helpers from '/imports/lib/helpers/helperFunctions';\n\nTemplate['status-open'].events({\n  'click .open-auction': function openAuction() {\n    let name = Session.get('searched');\n    let accounts = EthAccounts.find().fetch();\n    let template = Template.instance();\n    \n    if (accounts.length == 0) {\n      alert('No accounts found');\n    } else {\n      TemplateVar.set(template, 'opening', true)\n      registrar.openAuction(name, {\n        from: accounts[0].address,\n        gas: 1000000\n      }, (err, txid) => {\n        if (err) {\n          TemplateVar.set(template, 'opening', false)\n          alert(err)\n          return;\n        }\n        Helpers.checkTxSuccess(txid, (err, isSuccessful) => {\n          if (err) {\n            TemplateVar.set(template, 'opening', false)\n            alert(err)\n            return;\n          }\n          if (isSuccessful) {\n            Helpers.refreshStatus();\n          } else {\n            alert('Transaction failed')\n          }\n          TemplateVar.set(template, 'opening', false)\n        })\n      })\n    }\n  }\n})\n\nTemplate['status-open'].helpers({\n  opening() {\n    return TemplateVar.get('opening');\n  }\n})"]},"hash":"beae83b2566f1ce3e1c217995b1f03c07dfbf8fa"}
