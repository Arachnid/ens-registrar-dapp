{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/lib/ethereum","imported":["registrar"],"specifiers":[{"kind":"named","imported":"registrar","local":"registrar"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/templates/components/nameStatus.js","filenameRelative":"/imports/templates/components/nameStatus.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/templates/components/nameStatus.js.map","sourceFileName":"/imports/templates/components/nameStatus.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"nameStatus"},"ignored":false,"code":"var registrar;module.import('/imports/lib/ethereum',{\"registrar\":function(v){registrar=v}});\n\nTemplate['components_nameStatus'].onCreated(function () {\n  var template = this;\n  TemplateVar.set('error', false);\n  function lookupName(name) {\n    if (!name) {\n      return;\n    }\n    try {\n      registrar.getEntry(name, function (err, entry) {\n        if (!err && entry) {\n          TemplateVar.set(template, 'nameInfo', {\n            name: entry.name + '.eth',\n            entry: entry\n          });\n\n          TemplateVar.set(template, 'name', entry.name);\n          TemplateVar.set(template, 'status', 'status-' + entry.mode);\n          TemplateVar.set(template, 'aside', 'aside-' + entry.mode);\n          Session.set('name', entry.name);\n        }\n      });\n    } catch (e) {\n      TemplateVar.set(template, 'error', e);\n    }\n  }\n\n  this.autorun(function () {\n    var searched = Session.get('searched');\n    TemplateVar.set(template, 'error', false);\n    //Look up name on 'searched' change.\n    lookupName(searched);\n  });\n\n  setInterval(function () {\n    return lookupName(Session.get('searched'));\n  }, 1000);\n});\n\nTemplate['components_nameStatus'].helpers({\n  searched: function () {\n    function searched() {\n      return Session.get('searched');\n    }\n\n    return searched;\n  }(),\n  fullName: function () {\n    function fullName() {\n      //searched + .eth\n      return TemplateVar.get('nameInfo').name;\n    }\n\n    return fullName;\n  }()\n});\n\nTemplate['aside-can-invalidate'].helpers({\n  value: function () {\n    function value() {\n      var val = Template.instance().data.entry.deed.balance;\n      return web3.fromWei(val.toFixed(), 'ether');\n    }\n\n    return value;\n  }(),\n  invalidatorFee: function () {\n    function invalidatorFee() {\n      var val = Template.instance().data.entry.deed.balance;\n      return web3.fromWei(val.toFixed() / 2, 'ether');\n    }\n\n    return invalidatorFee;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/templates/components/nameStatus.js"],"names":["registrar","Template","onCreated","template","TemplateVar","set","lookupName","name","getEntry","err","entry","mode","Session","e","autorun","searched","get","setInterval","helpers","fullName","value","val","instance","data","deed","balance","web3","fromWei","toFixed","invalidatorFee"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uBAA1B;;AAEAC,SAAS,uBAAT,EAAkCC,SAAlC,CAA4C,YAAW;AACrD,MAAIC,WAAW,IAAf;AACAC,cAAYC,GAAZ,CAAgB,OAAhB,EAAyB,KAAzB;AACA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAI,CAACA,IAAL,EAAW;AACT;AACD;AACD,QAAI;AACFP,gBAAUQ,QAAV,CAAmBD,IAAnB,EAAyB,UAACE,GAAD,EAAMC,KAAN,EAAgB;AACvC,YAAG,CAACD,GAAD,IAAQC,KAAX,EAAkB;AAChBN,sBAAYC,GAAZ,CAAgBF,QAAhB,EAA0B,UAA1B,EAAsC;AACpCI,kBAAMG,MAAMH,IAAN,GAAa,MADiB;AAEpCG;AAFoC,WAAtC;;AAKAN,sBAAYC,GAAZ,CAAgBF,QAAhB,EAA0B,MAA1B,EAAkCO,MAAMH,IAAxC;AACAH,sBAAYC,GAAZ,CAAgBF,QAAhB,EAA0B,QAA1B,EAAoC,YAAYO,MAAMC,IAAtD;AACAP,sBAAYC,GAAZ,CAAgBF,QAAhB,EAA0B,OAA1B,EAAmC,WAAWO,MAAMC,IAApD;AACAC,kBAAQP,GAAR,CAAY,MAAZ,EAAoBK,MAAMH,IAA1B;AACD;AACF,OAZD;AAaD,KAdD,CAcE,OAAMM,CAAN,EAAS;AACTT,kBAAYC,GAAZ,CAAgBF,QAAhB,EAA0B,OAA1B,EAAmCU,CAAnC;AACD;AACF;;AAED,OAAKC,OAAL,CAAa,YAAW;AACtB,QAAIC,WAAWH,QAAQI,GAAR,CAAY,UAAZ,CAAf;AACAZ,gBAAYC,GAAZ,CAAgBF,QAAhB,EAA0B,OAA1B,EAAmC,KAAnC;AACE;AACFG,eAAWS,QAAX;AACD,GALD;;AAOAE,cAAY;AAAA,WAAMX,WAAWM,QAAQI,GAAR,CAAY,UAAZ,CAAX,CAAN;AAAA,GAAZ,EAAuD,IAAvD;AACD,CAlCD;;AAqCAf,SAAS,uBAAT,EAAkCiB,OAAlC,CAA0C;AACtCH,UADsC;AAAA,wBAC3B;AACT,aAAOH,QAAQI,GAAR,CAAY,UAAZ,CAAP;AACD;;AAHqC;AAAA;AAItCG,UAJsC;AAAA,wBAI3B;AACT;AACA,aAAOf,YAAYY,GAAZ,CAAgB,UAAhB,EAA4BT,IAAnC;AACD;;AAPqC;AAAA;AAAA,CAA1C;;AAWAN,SAAS,sBAAT,EAAiCiB,OAAjC,CAAyC;AACvCE,OADuC;AAAA,qBAC/B;AACN,UAAIC,MAAMpB,SAASqB,QAAT,GAAoBC,IAApB,CAAyBb,KAAzB,CAA+Bc,IAA/B,CAAoCC,OAA9C;AACA,aAAOC,KAAKC,OAAL,CAAaN,IAAIO,OAAJ,EAAb,EAA4B,OAA5B,CAAP;AACD;;AAJsC;AAAA;AAKvCC,gBALuC;AAAA,8BAKtB;AACf,UAAIR,MAAMpB,SAASqB,QAAT,GAAoBC,IAApB,CAAyBb,KAAzB,CAA+Bc,IAA/B,CAAoCC,OAA9C;AACA,aAAOC,KAAKC,OAAL,CAAaN,IAAIO,OAAJ,KAAc,CAA3B,EAA8B,OAA9B,CAAP;AACD;;AARsC;AAAA;AAAA,CAAzC","file":"/imports/templates/components/nameStatus.js.map","sourcesContent":["import { registrar } from '/imports/lib/ethereum';\n\nTemplate['components_nameStatus'].onCreated(function() {\n  var template = this;\n  TemplateVar.set('error', false);\n  function lookupName(name) {\n    if (!name) {\n      return;\n    }\n    try {\n      registrar.getEntry(name, (err, entry) => {\n        if(!err && entry) {\n          TemplateVar.set(template, 'nameInfo', {\n            name: entry.name + '.eth',\n            entry\n          })\n\n          TemplateVar.set(template, 'name', entry.name);\n          TemplateVar.set(template, 'status', 'status-' + entry.mode);\n          TemplateVar.set(template, 'aside', 'aside-' + entry.mode);\n          Session.set('name', entry.name);\n        }\n      });\n    } catch(e) {\n      TemplateVar.set(template, 'error', e);\n    }\n  }\n  \n  this.autorun(function() {\n    var searched = Session.get('searched');\n    TemplateVar.set(template, 'error', false);\n      //Look up name on 'searched' change.\n    lookupName(searched);\n  })\n  \n  setInterval(() => lookupName(Session.get('searched')), 1000);\n});\n\n\nTemplate['components_nameStatus'].helpers({\n    searched() {\n      return Session.get('searched');\n    },\n    fullName() {\n      //searched + .eth\n      return TemplateVar.get('nameInfo').name\n    }\n});\n\n\nTemplate['aside-can-invalidate'].helpers({\n  value() {\n    var val = Template.instance().data.entry.deed.balance;\n    return web3.fromWei(val.toFixed(), 'ether');\n  },\n  invalidatorFee() {\n    var val = Template.instance().data.entry.deed.balance;\n    return web3.fromWei(val.toFixed()/2, 'ether');\n  }\n})\n"]},"hash":"47171f83e5faae5107ac684f4dd9585da378591b"}
