{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/lib/ethereum","imported":["registrar"],"specifiers":[{"kind":"named","imported":"registrar","local":"registrar"}]},{"source":"/imports/lib/helpers/helperFunctions","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Helpers"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/templates/components/bid.js","filenameRelative":"/imports/templates/components/bid.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/templates/components/bid.js.map","sourceFileName":"/imports/templates/components/bid.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"bid"},"ignored":false,"code":"var registrar;module.import('/imports/lib/ethereum',{\"registrar\":function(v){registrar=v}});var Helpers;module.import('/imports/lib/helpers/helperFunctions',{\"default\":function(v){Helpers=v}});\n\n\nTemplate['components_bid'].events({\n  'click .reveal-bid': function () {\n    function clickRevealBid() {\n      var template = Template.instance();\n      var bid = template.data.bid;\n      MyBids.update({ _id: bid._id }, { $set: { revealing: true } });\n      registrar.unsealBid(bid.bid, {\n        from: bid.owner, //todo: check if account is bid owner\n        gas: 300000\n      }, function (err, txid) {\n        if (err) {\n          alert(err);\n          return;\n        }\n        console.log(txid);\n        Helpers.checkTxSuccess(txid, function (err, isSuccessful) {\n          if (isSuccessful) {\n            //todo: get revealed status from the contract\n            MyBids.update({ _id: bid._id }, { $set: { revealed: true } });\n          } else {\n            alert('Revealing the bid failed');\n          }\n          TemplateVar.set(template, 'revealing', false);\n          MyBids.update({ _id: bid._id }, { $set: { revealing: false } });\n        });\n      });\n    }\n\n    return clickRevealBid;\n  }()\n});\n\nTemplate['components_bid'].helpers({\n  isRevealed: function () {\n    function isRevealed() {\n      //todo: get revealed status from the contract\n      return MyBids.findOne({ _id: this.bid._id }).revealed;\n    }\n\n    return isRevealed;\n  }(),\n  revealing: function () {\n    function revealing() {\n      return MyBids.findOne({ _id: this.bid._id }).revealing;\n    }\n\n    return revealing;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/templates/components/bid.js"],"names":["registrar","Helpers","Template","events","template","instance","bid","data","MyBids","update","_id","$set","revealing","unsealBid","from","owner","gas","err","txid","alert","console","log","checkTxSuccess","isSuccessful","revealed","TemplateVar","set","helpers","isRevealed","findOne"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,sCAApB;;AAEAC,SAAS,gBAAT,EAA2BC,MAA3B,CAAkC;AAChC;AAAqB,8BAAW;AAC9B,UAAIC,WAAWF,SAASG,QAAT,EAAf;AACA,UAAIC,MAAMF,SAASG,IAAT,CAAcD,GAAxB;AACAE,aAAOC,MAAP,CAAc,EAAEC,KAAKJ,IAAII,GAAX,EAAd,EAAgC,EAAEC,MAAM,EAACC,WAAW,IAAZ,EAAR,EAAhC;AACAZ,gBAAUa,SAAV,CAAoBP,IAAIA,GAAxB,EAA6B;AAC3BQ,cAAMR,IAAIS,KADiB,EACX;AAChBC,aAAK;AAFsB,OAA7B,EAGG,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChB,YAAGD,GAAH,EAAQ;AACNE,gBAAMF,GAAN;AACA;AACD;AACDG,gBAAQC,GAAR,CAAYH,IAAZ;AACAjB,gBAAQqB,cAAR,CAAuBJ,IAAvB,EAA6B,UAACD,GAAD,EAAMM,YAAN,EAAuB;AAClD,cAAGA,YAAH,EAAiB;AACf;AACAf,mBAAOC,MAAP,CAAc,EAAEC,KAAKJ,IAAII,GAAX,EAAd,EAAgC,EAAEC,MAAM,EAACa,UAAU,IAAX,EAAR,EAAhC;AACD,WAHD,MAGO;AACLL,kBAAM,0BAAN;AACD;AACDM,sBAAYC,GAAZ,CAAgBtB,QAAhB,EAA0B,WAA1B,EAAuC,KAAvC;AACAI,iBAAOC,MAAP,CAAc,EAAEC,KAAKJ,IAAII,GAAX,EAAd,EAAgC,EAAEC,MAAM,EAACC,WAAW,KAAZ,EAAR,EAAhC;AACD,SATD;AAUD,OAnBD;AAoBD;;AAxBD;AAAA;AADgC,CAAlC;;AA4BAV,SAAS,gBAAT,EAA2ByB,OAA3B,CAAmC;AACjCC,YADiC;AAAA,0BACpB;AACX;AACA,aAAOpB,OAAOqB,OAAP,CAAe,EAACnB,KAAK,KAAKJ,GAAL,CAASI,GAAf,EAAf,EAAoCc,QAA3C;AACD;;AAJgC;AAAA;AAKjCZ,WALiC;AAAA,yBAKrB;AACV,aAAOJ,OAAOqB,OAAP,CAAe,EAACnB,KAAK,KAAKJ,GAAL,CAASI,GAAf,EAAf,EAAoCE,SAA3C;AACD;;AAPgC;AAAA;AAAA,CAAnC","file":"/imports/templates/components/bid.js.map","sourcesContent":["import { registrar } from '/imports/lib/ethereum';\nimport Helpers from '/imports/lib/helpers/helperFunctions';\n\nTemplate['components_bid'].events({\n  'click .reveal-bid': function() {\n    let template = Template.instance();\n    let bid = template.data.bid;\n    MyBids.update({ _id: bid._id }, { $set: {revealing: true} })\n    registrar.unsealBid(bid.bid, {\n      from: bid.owner,//todo: check if account is bid owner\n      gas: 300000\n    }, (err, txid) => {\n      if(err) {\n        alert(err)\n        return\n      }\n      console.log(txid)\n      Helpers.checkTxSuccess(txid, (err, isSuccessful) => {\n        if(isSuccessful) {\n          //todo: get revealed status from the contract\n          MyBids.update({ _id: bid._id }, { $set: {revealed: true} })\n        } else {\n          alert('Revealing the bid failed')\n        }\n        TemplateVar.set(template, 'revealing', false)\n        MyBids.update({ _id: bid._id }, { $set: {revealing: false} })\n      })      \n    })\n  }\n})\n\nTemplate['components_bid'].helpers({\n  isRevealed() {\n    //todo: get revealed status from the contract\n    return MyBids.findOne({_id: this.bid._id}).revealed;\n  },\n  revealing() {\n    return MyBids.findOne({_id: this.bid._id}).revealing;\n  }\n})"]},"hash":"6278df1e1abc7593e82f62d5b37cb34519fc0191"}
