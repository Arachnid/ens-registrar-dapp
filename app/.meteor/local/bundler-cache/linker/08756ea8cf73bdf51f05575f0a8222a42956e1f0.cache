[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nEthAccounts = Package['ethereum:accounts'].EthAccounts;\nEthTools = Package['ethereum:tools'].EthTools;\nLocalStore = Package['frozeman:storage'].LocalStore;\nTemplateVar = Package['frozeman:template-var'].TemplateVar;\nReactiveTimer = Package['frozeman:reactive-timer'].ReactiveTimer;\nTAPi18next = Package['tap:i18n'].TAPi18next;\nTAPi18n = Package['tap:i18n'].TAPi18n;\nmoment = Package['mrt:moment'].moment;\nGeoPattern = Package['hashanp:geopattern'].GeoPattern;\nMeta = Package['yasinuslu:blaze-meta'].Meta;\nnumeral = Package['numeral:numeral'].numeral;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"i18n\":{\"app.en.i18n.json\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// i18n/app.en.i18n.json                                             //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"preloaded_langs\":[],\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"app\":{\"loading\":\"Loading...\",\"offline\":\"Can't connect are you offline?\",\"logginIn\":\"Logging in...\"},\"error\":{\"insufficientRights\":\"You don't have enough rights for this action.\",\"notFound\":\"Page not found...\"},\"buttons\":{\"ok\":\"OK\",\"cancel\":\"Cancel\",\"save\":\"Save\",\"edit\":\"edit\",\"send\":\"Send\",\"create\":\"Create\",\"tryToReconnect\":\"Try to reconnect\"},\"commonWords\":{\"you\":\"You\",\"send\":\"Send\",\"or\":\"or\",\"with\":\"with\",\"and\":\"and\",\"on\":\"on\",\"per\":\"per\"}};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n\n///////////////////////////////////////////////////////////////////////\n\n},\"dapp.en.i18n.json\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// i18n/dapp.en.i18n.json                                            //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"dapp\":{\"app\":{\"title\":\"Ethereum Name Service Registrar\",\"buttons\":{\"home\":\"Home\",\"view1\":\"View1\",\"view2\":\"View2\"},\"headers\":{\"identicon\":\"Identicon\",\"address\":\"Address\",\"balance\":\"Balance\",\"account\":\"Account\",\"solidity\":\"Solidity Code\",\"coinbase\":\"Coinbase\",\"listening\":\"Listening\",\"peerCount\":\"Peer Count\",\"blockNumber\":\"Block Numbr\",\"defaultBlock\":\"Default Block\",\"mining\":\"Mining\",\"gasPrice\":\"Gas Price\"},\"copyright\":\"Copyright © My Ethereum ÐApp 2015. All Rights Reserved\",\"texts\":{\"connectionErrorMist\":\"Unable to connect. Please start geth using:<br><br><small><code>__node__</code><br><br>Make sure you set your IPC path to the default one when using a different <code>datadir</code> e.g.<br><code>geth --datadir ... --ipcpath /Users/&lt;yourUser&gt;/Library/Ethereum/geth.ipc</code><br>or<br><code>geth --datadir ... --ipcpath /Users/&lt;yourUser&gt;/.ethereum/geth.ipc</code>. <br><br>Optional add: <code>--unlock &lt;yourAccount&gt;.</code></small>\",\"connectionErrorBrowser\":\"Unable to connect. Please start geth with the following options:<br><br><small><code>__node__</code><br><br>Optional add: <code>--unlock &lt;yourAccount&gt;.</code></small>\"}},\"components\":{\"balance\":{\"header\":\"My Balance\",\"original\":\"Original Balance\"},\"accounts\":{\"header\":\"My Accounts\",\"description\":\"These are your Ethereum addresses. The identicons are generated based on the address value. Note balance is static.\"},\"multiplyContract\":{\"header\":\"Multiply Contract\",\"description\":\"Create a new contract and interact with it through the api call method. Note if the multiply result remains zero you may not have enough ETH.\",\"create\":\"Create New Contract\",\"deployed\":\"The contract was deployed to this address\",\"placeholder\":\"Number To Multiply\"},\"networkHealth\":{\"header\":\"Network Health\"},\"home\":{\"title\":\"Home\",\"defaultName\":\"Home\"},\"view1\":{\"title\":\"View 1\",\"defaultName\":\"View1\"},\"view2\":{\"title\":\"View 2\",\"defaultName\":\"View2\"}}}};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n\n///////////////////////////////////////////////////////////////////////\n\n}},\"project-i18n.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// project-i18n.js                                                   //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nTAPi18n._enable({\"helper_name\":\"i18n\",\"supported_languages\":[\"en\",\"de\"],\"i18n_files_route\":\"/i18n\",\"cdn_path\":null,\"preloaded_langs\":[]});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\nTAPi18n.languages_names[\"de\"] = [\"German\",\"Deutsch\"];\n\n///////////////////////////////////////////////////////////////////////\n\n}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./i18n/app.en.i18n.json\");\nrequire(\"./i18n/dapp.en.i18n.json\");\nrequire(\"./project-i18n.js\");","servePath":"/app.js","sourceMap":null}]